name: build
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  trivy:
    name: Trivy Dependency Scan
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Run Trivy vulnerability scanner in repo mode and save results in SARIF format
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'

      # Step 3: Upload Trivy scan results to GitHub Security tab
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # Step 4: Run Reviewdog with the SARIF results from the Trivy scan to post to PR
      - name: Run Reviewdog with Trivy results and output to PR
        uses: reviewdog/reviewdog@v0.14.0
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
          level: warning
          filter_mode: nofilter
          fail_on_error: false
          # Reviewdog expects the SARIF file, so we use the `reviewdog` tool with the SARIF format
          reviewdog_flags: '-name=trivy -reporter=github-pr-check -level=warning -filter-mode=nofilter -fail-on-error=false'
          sarif_file: trivy-results.sarif
